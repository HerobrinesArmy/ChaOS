;takes a,b as start of vectors in ram
;takes c as length of array
:vector_ADD
ADD C, A
:vector_ADD1
ife A, C
	SET PC, POP
ADD [A], [B]
ADD A, 1
ADD B, 1
SET PC, vector_ADD1
:vector_SUB
ADD C, A
:vector_SUB1
ife A, C
	SET PC, POP
SUB [A], [B]
ADD A, 1
ADD B, 1
SET PC, vector_SUB1
:vector_MUL
ADD C, A
:vector_MUL1
ife A, C
	SET PC, POP
MUL [A], [B]
ADD A, 1
ADD B, 1
SET PC, vector_MUL1
:vector_DIV
ADD C, A
:vector_DIV1
ife A, C
	SET PC, POP
DIV [A], [B]
ADD A, 1
ADD B, 1
SET PC, vector_DIV1