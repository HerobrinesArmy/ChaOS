:clrscr
        set push, a
        set push, i
        set push, j
       
        set j, 0x8000
:clearAll
        set a, 0x0000
        set [j], a
        add j, 1
        ife j, 0x8200
                set pc, clearEnd
        set pc, clearAll
:clearEnd
        set a, 0
        set b, 0x8000
        hwi [monitorID]
       
        set j, pop
        set i, pop
        set a, pop
		SET PC, POP
 
#macro print(text) {
        set push, a
        set push, i
        set push, j
       
        set i, text
        set j, [video_cur]
:writeLoop
        set a, [i]
        ife a, null
                set pc, continue2
        bor a, 0x7000
        set [j], a
        add i, 1
        add j, 1
        set pc, writeLoop
 
:continue2
        set a, 0
        set b, 0x8000
        hwi [monitorID]
        sub i, text
        add [video_cur], i
       
        set j, pop
        set i, pop
        set a, pop
}
 
:printc ; Takes A as the character to print
        set push, a
        set push, j
        set j, [video_cur]
        bor a, 0x7000
        set [j], a
        add [video_cur], 1
        IFE [video_cur], 0x8180
        	SUB [video_cur], 1
        set j, pop
        set a, pop
		SET PC, POP
 
 
:getchar
        set push, a
        :getcharLoop
        set a, 1
        hwi [keyboardID]
        ife c, 0
                set pc, getcharLoop
        set a, pop
		SET PC, POP
 
:backspace
        set pc, backspaceStart
        set pc, backspaceEnd
        :backspaceStart
        sub [video_cur], 0x0001
        printc(0x0020)
        sub [video_cur], 0x0001
        :backspaceEnd
        SET PC, POP

 
:enter
        :enterStart
        set push, a
        set push, b
        set push, j
       
        set a, [video_cur]
        set b, 0x0020
        set j, a
        mod j, b
        sub a, j
        add a, 0x0020
        ifg a, 0x81ff
                set a, 0x8000
        set [video_cur], a
        set j, pop
        set b, pop
        set a, pop
        :enterEnd
        SET PC, POP
 
:read
		SET PUSH, A
		SET PUSH, C
        :readLoop
        JSR getChar
        ife c, 0x0010
                JSR backspace
        ife c, 0x0010
                set pc, readLoop
        ife c, 0x0011
                set pc, readDone
        SET A, C
        JSR printc
        set pc, readLoop
        :readDone
        SET C, POP
        SET A, POP
        SET PC, POP
 
:null   dat 0x0
:screen dat 0x0
:line   dat 0x8000