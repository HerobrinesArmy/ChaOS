; --------------------------------------------
; Title:   memory_manager
; Author:  smith10
; Date:    2012-06-15
; Version: 
; --------------------------------------------

#segment code

:mem_init
set [mem_heap_first_free], mem_heap_start
set pc, pop

;Output of 0 means error (Out of Ram)!
;Check for this, or you may overwrite crucial code!!!
;A: amount of needed words
;out A: address of allocated memory
:mem_alloc
set push, A
set A, mem_heap_first_free
add [mem_heap_first_free], pop
set pc, pop

;A: address of memory
;B: new size of memory segment
;out A: 0 if success, 1 if failure
:mem_resize ;stub, size increase doesn't worky yet
set pc, pop

;tries relocating if resize fails. Especially useful for size increase
;A: address of memory
;B: new size of memory segment
;out A: new address of memory
;out B: 0 if success, 1 if failure
:mem_resize_force
set push, A
jsr mem_resize
ife A, 1
	set pc, .relocate
set B, 0
set A, pop
set pc, pop
:.relocate
set A, B
jsr mem_alloc
ife A, 0
	set pc, .fail
;TODO: insert memcpy from [peak] to [A], set return values
:.fail
set B, 1
set A, pop
set pc, pop

;A: address of memory to be freed
:mem_free
set pc, pop	;that's right, no free implemented yet

#segment data
:mem_heap_first_free DAT mem_heap_start

#segment mem_heap 990
:mem_heap_start DAT 0x0000