; --------------------------------------------
    ; Title:   TEA (16-bit)
    ; Author:  Liraal
    ; Date:    2012-06-25
    ; Version: 0x2 (Working)
    ; For use within Herobrine's Army
    ;--------------------------------------------
     
    ;ROUTINES====================================
    ;IMPORTANT: A correct string to encrypt 
    ;must contain an even number of chars 
    ;or end with two '0's instead of one.
    ;============================================
    :tea_encrypt_string ;params: A - address of 1. byte of input, B - address of 1. byte of output
    set push, A
    set push, B
    .loop
    set [v0], [A]
    add A, 0x1
    set [v1], [A]
    add A, 0x1
    jsr tea_encrypt
    set [B], [v0]
    add B, 0x1
    set [B], [v1]
    add B, 0x1
    ifn [A], 0x0
    	set pc, .loop
    set B, pop
    set A, pop
    set pc, pop
    
    :tea_decrypt_string ;params: A - address of 1. byte of input, B - address of 1. byte of output
    set push, A
    set push, B
    .loop
    set [v0], [A]
    add A, 0x1
    set [v1], [A]
    add A, 0x1
    jsr tea_decrypt
    set [B], [v0]
    add B, 0x1
    set [B], [v1]
    add B, 0x1
    ifn [A], 0x0
    	set pc, .loop
    set B, pop
    set A, pop
    set pc, pop
    
    :tea_encrypt        ;params: v0, v1
    set push, a
    set push, i
    set [sum], 0x0
    set i, 0x0
    :.loop
    ife i, 0x20
            set pc, .end
    ;----------------
    add [sum], [delta]
    ;setting v0------
    set a, [v1]
    shl a, 0x4
    add a, [k0]
    set [t0], a
     
    set a, [v1]
    add a, [sum]
    set [t1], a
     
    set a, [v1]
    shr a, 0x5
    add a, [k1]
    set [t2], a
     
    xor [t0], [t1]
    xor [t0], [t2]
     
    add [v0], [t0]
    ;setting v1---------
    set a, [v0]
    shl a, 0x4
    add a, [k2]
    set [t0], a
     
    set a, [v0]
    add a, [sum]
    set [t1], a
     
    set a, [v0]
    shr a, 0x5
    add a, [k3]
    set [t2], a
     
    xor [t0], [t1]
    xor [t0], [t2]
     
    add [v1], [t0]
     
    add i, 1
    set pc, .loop
    :.end
    set i, pop
    set a, pop
    set pc, pop
     
    :tea_decrypt        ;params: v0, v1
    set push, a
    set push, i
    set [sum], 0x3720
    set i, 0x0
    :.loop
    ife i, 0x20
            set pc, .end
     
    ;setting v1------
    set a, [v0]
    shl a, 0x4
    add a, [k2]
    set [t0], a
     
    set a, [v0]
    add a, [sum]
    set [t1], a
     
    set a, [v0]
    shr a, 0x5
    add a, [k3]
    set [t2], a
     
    xor [t0], [t1]
    xor [t0], [t2]
     
    sub [v1], [t0]
    ;setting v0------
    set a, [v1]
    shl a, 0x4
    add a, [k0]
    set [t0], a
     
    set a, [v1]
    add a, [sum]
    set [t1], a
     
    set a, [v1]
    shr a, 0x5
    add a, [k1]
    set [t2], a
     
    xor [t0], [t1]
    xor [t0], [t2]
     
    sub [v0], [t0]
    ;-----------------
    sub [sum], [delta]
     
    add i, 1
    set pc, .loop
    :.end
    set i, pop
    set a, pop
    set pc, pop
     
    ;DATA===========================================
    :delta  dat 0x79b9      ;const
    :v0             dat 0x0 ;input
    :v1             dat 0x0 ;input
    :k0             dat 0x0 ;key0
    :k1             dat 0x0 ;key1
    :k2             dat 0x0 ;key2
    :k3             dat 0x0 ;key3
    :sum    dat 0x0
    ;TEMP variables
    :t0             dat 0x0
    :t1             dat 0x0
    :t2             dat 0x0
